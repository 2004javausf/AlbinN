/*
________/\\\______________________________________________________________________________        
 _____/\\\\/\\\\___________________________________________________________________________       
  ___/\\\//\////\\\_________________________________________________________________________      
   __/\\\______\//\\\__/\\\____/\\\_____/\\\\\\\\___/\\\____/\\\_____/\\\\\\\\___/\\\\\\\\\\_     
    _\//\\\______/\\\__\/\\\___\/\\\___/\\\/////\\\_\/\\\___\/\\\___/\\\/////\\\_\/\\\//////__    
     __\///\\\\/\\\\/___\/\\\___\/\\\__/\\\\\\\\\\\__\/\\\___\/\\\__/\\\\\\\\\\\__\/\\\\\\\\\\_   
      ____\////\\\//_____\/\\\___\/\\\_\//\\///////___\/\\\___\/\\\_\//\\///////___\////////\\\_  
       _______\///\\\\\\__\//\\\\\\\\\___\//\\\\\\\\\\_\//\\\\\\\\\___\//\\\\\\\\\\__/\\\\\\\\\\_ 
        _________\//////____\/////////_____\//////////___\/////////_____\//////////__\//////////__
 */

package com.collections;
import java.util.ArrayDeque;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;

public class MyQueue {
	
	//Ordered list of objects related to insertion order
	//Follows the First-in-First-Out (FIFO) principle
	//Other principle is First-in-Last-Out (FILO or LIFO)
	//Stack
	//Methods:
		//poll, remove, peek, and element

	public static void main(String[] args) {
		
		Queue<String> myFirstQueue = new PriorityQueue<>();
		Queue<Integer> myOtherQ = new LinkedList<>();
		Queue<String> myOtherOther = new ArrayDeque<>();
		
		myFirstQueue.add("Peter Pan");
		myFirstQueue.add("Marmaduke");
		myFirstQueue.add("Spawn");
//		System.out.println(myFirstQueue);
//		System.out.println(myFirstQueue.poll());
//		System.out.println(myFirstQueue.poll());
//		System.out.println(myFirstQueue.poll());
//		System.out.println(myFirstQueue.poll());
		System.out.println(myFirstQueue);
		System.out.println(myFirstQueue.peek());
		
	}

}

/*
          _             _                 _            _       _    _                   _            
        /\ \     _    / /\              /\ \         / /\    / /\ / /\                /\ \     _    
       /  \ \   /\_\ / /  \             \_\ \       / / /   / / // /  \              /  \ \   /\_\  
      / /\ \ \_/ / // / /\ \            /\__ \     / /_/   / / // / /\ \            / /\ \ \_/ / /  
     / / /\ \___/ // / /\ \ \          / /_ \ \   / /\ \__/ / // / /\ \ \          / / /\ \___/ /   
    / / /  \/____// / /  \ \ \        / / /\ \ \ / /\ \___\/ // / /  \ \ \        / / /  \/____/    
   / / /    / / // / /___/ /\ \      / / /  \/_// / /\/___/ // / /___/ /\ \      / / /    / / /     
  / / /    / / // / /_____/ /\ \    / / /      / / /   / / // / /_____/ /\ \    / / /    / / /      
 / / /    / / // /_________/\ \ \  / / /      / / /   / / // /_________/\ \ \  / / /    / / /       
/ / /    / / // / /_       __\ \_\/_/ /      / / /   / / // / /_       __\ \_\/ / /    / / /        
\/_/     \/_/ \_\___\     /____/_/\_\/       \/_/    \/_/ \_\___\     /____/_/\/_/     \/_/         
         _                   _             _                _          _                            
        / /\                _\ \          / /\             /\ \       /\ \     _                    
       / /  \              /\__ \        / /  \            \ \ \     /  \ \   /\_\                  
      / / /\ \            / /_ \_\      / / /\ \           /\ \_\   / /\ \ \_/ / /                  
     / / /\ \ \          / / /\/_/     / / /\ \ \         / /\/_/  / / /\ \___/ /                   
    / / /  \ \ \        / / /         / / /\ \_\ \       / / /    / / /  \/____/                    
   / / /___/ /\ \      / / /         / / /\ \ \___\     / / /    / / /    / / /                     
  / / /_____/ /\ \    / / / ____    / / /  \ \ \__/    / / /    / / /    / / /                      
 / /_________/\ \ \  / /_/_/ ___/\ / / /____\_\ \  ___/ / /__  / / /    / / /                       
/ / /_       __\ \_\/_______/\__\// / /__________\/\__\/_/___\/ / /    / / /                        
\_\___\     /____/_/\_______\/    \/_____________/\/_________/\/_/     \/_/                         
                                                                                                    
 */

